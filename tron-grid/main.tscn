[gd_scene load_steps=4 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "
shader_type canvas_item;

float grid(vec2 uv, float battery, float iTime)
{
    vec2 size = vec2(uv.y, uv.y * uv.y * 0.2) * 0.01;
    uv += vec2(0.0, iTime * 4.0 * (battery + 0.05));
    uv = abs(fract(uv) - 0.5);
 	vec2 lines = smoothstep(size, vec2(0.0), uv);
 	lines += smoothstep(size * 5.0, vec2(0.0), uv) * 0.4 * battery;
    return clamp(lines.x + lines.y, 0.0, 3.0);
}


void fragment()
{
    vec2 uv = (2.0 * FRAGCOORD.xy.xy - (1.0 / SCREEN_PIXEL_SIZE).xy)/(1.0 / SCREEN_PIXEL_SIZE).y;
    float battery = 1.0;
    //if (iMouse.x > 1.0 && iMouse.y > 1.0) battery = iMouse.y / iResolution.y;
    //else battery = 0.8;
    
    //if (abs(uv.x) < (9.0 / 16.0))
    {
        // Grid
        float fog = smoothstep(0.1, -0.02, abs(uv.y + 0.2));
        vec3 col = vec3(0.0, 0.1, 0.2);
        if (uv.y < -0.2)
        {
            uv.y = 3.0 / (abs(uv.y + 0.2) + 0.05);
            uv.x *= uv.y * 1.0;
            float gridVal = grid(uv, battery, TIME);
            col = mix(col, vec3(1.0, 0.5, 1.0), gridVal);
        }
        else
        {
           
            uv.y -= battery * 1.1 - 0.51;
            
 
        }

        col += fog * fog * fog;
        col = mix(vec3(col.r, col.r, col.r) * 0.5, col, battery * 0.7);

        COLOR = vec4(col,1.0);
    }
    //else fragColor = vec4(0.0);

    
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[node name="Node2D" type="Node2D"]

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 2 )
position = Vector2( 7727.69, 8110.39 )
scale = Vector2( 21.2537, 12.0002 )
texture = ExtResource( 1 )
centered = false
offset = Vector2( -372, -692 )
